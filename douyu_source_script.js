// 因为最后一行的eval生成的函数会使用到CryptoJS, 所以提前赋值给Global, 执行eval函数时的this就指向了global

const CryptoJS = require("crypto-js")

global.CryptoJS = CryptoJS

// ===================================== 下面的代码是从斗鱼的源码上复制来的 =====================================

var rea7b63366dc610146893 = [0xd344303a, 0x283dddab, 0x67b8c1b1, 0x8d4384fb, 0x78cd2d55, 0xb0f8cac0, 0x52c32e4b, 0x1b07d479, 0x165d5cc7, 0x22e493f8, 0x32a0d972, 0xeda658ad, 0xeee112a8, 0x24c5e6da, 0xbe573665, 0xaa6d2b79, 0xfbd50194, 0xc25a9e1a, 0xe5c97507, 0x593daa15, 0x1de756f, 0xf6e6c26c, 0xef44cf3b, 0x873eb6eb, 0x5447ef83, 0xc4f5b607, 0x61e4916, 0x11fd53fb, 0xb1ab929e, 0xdde6e68, 0x60f5a793, 0xe92d9d54, 0x1c9acc9b, 0xde8ba7eb, 0xabab5777, 0x4857ce02, 0xe1294673, 0x38f17d6b, 0xb1d54b27, 0x37a4671a, 0x60d4e69e, 0x7992772b, 0xd1f7176d, 0x489314a8, 0xbd7bfd25, 0x792786cb, 0x2985ec74, 0x8d3b9d9, 0xb600cdb6, 0x4ba92d7e, 0xfc9374c9, 0x994fdcdb, 0x79614ebb, 0xd36d2b70, 0x25d45ad3, 0xc43f5885, 0xc83d82fe, 0x6e9a2bd3, 0x89ef18bd, 0x208b747a, 0x7b7695fb, 0x85377161, 0x14068edf, 0x3634a6b8, 0xd07bf568, 0x7577f35a, 0x5cf632a1, 0xf6d54e91, 0x160366c7, 0xb8e67fbd, 0xa5c3c5e1, 0xa43d3833, 0x158a25d8, 0x5d176609, 0x2ec70d12, 0x38a32b0a, 0xd3a52e9b, 0x2b5cb19a, 0x6440f44e, 0x9214a52e, 0x60ab0a1e, 0xceccbf41, 0x95b7acb8, 0x37c9930a, 0x10beb389, 0xcb6ef8c6, 0xc88dce06, 0xa9ae1681, 0xed426c62, 0xe3792ded, 0xf4f342a5, 0xfab6eb17, 0xa34a5df, 0x6adb2638, 0xa9de1a41, 0x3fead962, 0x45c68891, 0x847eb9e7, 0xae1a2d06, 0x26864fc8, 0xf6d5b58d, 0xa55a086a, 0x72ca9af7, 0x9d321eb2, 0x335766ed, 0xe931e7b4, 0xbdc30da3, 0xac00f43f, 0xddbae8dc, 0x4eae13dd, 0x5ca3d6e4, 0xaa1c0823, 0x71661e19, 0xce987abc, 0x9609fcb2, 0x30ec3011, 0x4b7aea8b, 0xa65fdf4f, 0x8a978de2, 0x6c684a3b, 0x6ea89e92, 0x4fae0869, 0x7ef85857, 0xe68aec7b, 0x9b1c29e2, 0x25cc2cf3, 0xd0fb10e5, 0xc45ea6b9, 0x1789bd61, 0x99ddcf4, 0x309b4011, 0x54cabfd9, 0xdae1592f, 0x5358d954, 0xc8ebfedc, 0xc0e34785, 0x302ea24f, 0xdf9971a1, 0x4a55533f, 0x20158144, 0xd019d9d4, 0x66c81b63, 0x7b14dd80, 0x1301b07, 0xf9374f5e, 0xee26f700, 0xf9149e00, 0x2d0b93d4, 0x2c04b743, 0x7c945ed, 0x6fa56c52, 0xecb8d330, 0x626a2de3, 0x614a1256, 0x19572708, 0x698f38a8, 0x5cb08f01, 0x2cb10b71, 0x471618ac, 0xd3b1cd4, 0xb27ad2c, 0xaa35122b, 0xbaa1e5bd, 0x5f014612, 0x9406ae43, 0xfa5056da, 0xcb3d1892, 0x490eb85f, 0x91fb1e25, 0xc9baa082, 0x8bab1725, 0xfa31b07, 0x2c063203, 0xb80a042b, 0x9bacf882, 0xafea233a, 0x563e9af6, 0x993e39c9, 0x3ca02f06, 0xe1d514a3, 0x314116f6, 0xbc926f6c, 0x11c069dc, 0x63c005bf, 0x80d7dba3, 0x35c7ef45, 0xe46fb96b, 0x9d2c099, 0xce8b56d3, 0x93c22bfb, 0xbdddacaf, 0x9037a31a, 0xc96365dc, 0x3985b1e0, 0x2dd1d3a0, 0x45b0b28c, 0xf01bd581, 0xb121ba45, 0xdfda9f07, 0x27e25c37, 0x4b415fe8, 0xb23f09a7, 0x555803fb, 0xd2399bfe, 0xd26919a2, 0x3d5067a6, 0x9a258bb3, 0x67e03174, 0xe668ca60, 0x1f034f2f, 0xfd476759, 0x1486cbd, 0x9371cd5, 0xaad7a84e, 0xa9d5416d, 0x3be919e1, 0x7a843b7d, 0x613377e0, 0x608d77e8, 0x8b9d451d, 0x82f34b32, 0xaa61d346, 0xf7fe42aa, 0x5ddafcb6, 0xc445b498, 0x1b786608, 0x6d1785c5, 0xa9458b57, 0x5943593d, 0x80722ad1, 0x58a13b80, 0x3d198b53, 0x3eb4998f, 0x3f7411e4, 0x5d7153f9, 0x8ec34856, 0xc63bcf03, 0xac776043, 0x816ad9d4, 0xa45bc867, 0xbf251e30, 0x47cde02f, 0x6d44d574, 0x7680e588, 0x347ea236, 0x7d44c6c9, 0x70a7f85a, 0x3916b80a, 0xd05cb9f9, 0xf4a8eb9e, 0x97f4201d, 0xe9d1bf36, 0x1ba5b926, 0x7e8dfe86, 0x7535c9aa, 0x20e1043f, 0x72b488e8, 0x32cba359, 0xc64a84d2, 0xcf47d60f, 0x3bfaa67a, 0x95a47a90, 0xe41237ee, 0x63762c50, 0x604da890, 0x4f8be831, 0x23d214b5, 0xe0cd1611, 0x604b6d0d, 0x3f650532, 0x92ae0bd6, 0x9bd20cc9, 0x88f3b954, 0xdf4989ac, 0x4c73ee05, 0x6f93fd2f, 0x38497e85, 0xb0901634, 0x12020fd8, 0x6179137e, 0x96185803, 0x716fe827, 0x498eb955, 0x99467983, 0xc969c045, 0xd8290502, 0xf1aeb76b, 0x4282f143, 0x18279cad, 0xb529e9d7, 0xa92d29d6, 0xeadbc99a, 0xd3b4869e, 0x9a51971f, 0x3dd84d34, 0x7ad776be, 0x75133301, 0xb0ba53ed, 0xb24ef656, 0x57c98c0b, 0x4e763a51, 0x76f6e863, 0x90c544ac, 0x1b79a761, 0x3ce06c0e, 0x52fa0f77, 0xef72e1c6, 0xaa591e68, 0x7905e3dd, 0xaa29bf30, 0xc572803d, 0xa53a91b0, 0xa8e61f7e, 0x954127d9, 0xb7a49199, 0xfa5080e8, 0xaa12afd6, 0x459b235b, 0x253c4801, 0xcf092fd3, 0x1d38d685, 0xcebd27f5, 0x859cdd88, 0x623c729b, 0x1761d15, 0x62b9b352, 0x9a1290a4, 0x7268001d, 0x98a9b26e, 0x100d818c, 0xf32e5192, 0xdf517f78, 0xb51696bf, 0x1ade807b, 0x8156c866, 0xe2d60351, 0xc66f9dba, 0xbcdb54aa, 0x2dd286aa, 0xdc94a6f3, 0xfd0114d9, 0xf05bbe86, 0x9bf86cbf, 0x1b5f032, 0x67efb063, 0x337b9d25, 0xa09028d3, 0x87561a97, 0x6a1084f6, 0x1d0207db, 0xf1dcc100, 0x7660d5b7, 0xecb0d24e, 0xc6d8b404, 0x7d6ee28a, 0x90d65e74, 0x8efdb980, 0x6d65e876, 0xbe9b3ad0, 0x3a2e6fd5, 0xad375ee7, 0xe3d927b, 0x84bc6a25, 0x69492b86, 0x11cc35bf, 0x31d02995, 0x2ec985ba, 0xa7af1887, 0x7ade34e8, 0x3805228, 0xe1092e2, 0xc8f66ac9, 0xdb3c0544, 0xf8098dae, 0xdb1021da, 0x9cd38b60, 0xca850028, 0xffbf462b, 0x8824c59a, 0xef8aaf4b, 0x4b2ff726, 0xd14b452f, 0x18f0174f, 0xca70aed, 0x90a99640, 0x973a2684, 0x167b3b07, 0xdd7cf01c, 0xb78c408f, 0xfe848bab, 0x342b54ee, 0x3630a316, 0xc834efaf, 0x2cf7e335, 0xbd84fb78, 0x80ccedf4, 0x78efcf30, 0x1df78c93, 0xbe075457, 0x49089686, 0x9f0f546, 0x482e3150, 0xe3b49f7c, 0x778650cc, 0xbcc27daf, 0xb361e157, 0x4ae57227, 0x5fcfb7e3, 0x860e0b8a, 0xa2da31e9, 0xd68ec393, 0x3b090b3b, 0x664cc987, 0xad33eb29, 0xc3c19a57, 0x79736613, 0x438daaf7, 0x51ac9416, 0xf48e727d, 0xfd67df24]

function ub98484234(rea7b63366dc6101468930, rea7b63366dc6101468931, rea7b63366dc6101468932) {
    var rk = [27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14, 25, 39, 16, 34, 30, 10, 27, 28, 14]
    var k2 = [0x4bf53e42, 0x615bf2b2]
    var lk = [0x4bf53e42, 0x615bf2b2]
    var v = rea7b63366dc610146893.slice(0)
    var k = [0xbd7375f8, 0xdfcfb71b, 0x3f7fed8e, 0xf7bb9631]
    for (var O = 0; O < 420; O++) {
        v[O] ^= 0x58f16098
    }
    v[1] = (v[1] >>> (lk[1] % 16)) | (v[1] << (32 - (lk[1] % 16)))
    v[0] = (v[0] >>> (lk[0] % 16)) | (v[0] << (32 - (lk[0] % 16)))
    v[3] ^= lk[1]
    v[2] -= lk[0]
    v[5] ^= lk[1]
    v[4] += lk[0]
    v[7] = (v[7] >>> (lk[1] % 16)) | (v[7] << (32 - (lk[1] % 16)))
    v[6] -= lk[0]
    v[9] = (v[9] << (lk[1] % 16)) | (v[9] >>> (32 - (lk[1] % 16)))
    v[8] -= lk[0]
    v[11] += lk[1]
    v[10] ^= lk[0]
    v[13] -= lk[1]
    v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)))
    v[15] -= lk[1]
    v[14] -= lk[0]
    v[17] -= lk[1]
    v[16] -= lk[0]
    v[19] = (v[19] >>> (lk[1] % 16)) | (v[19] << (32 - (lk[1] % 16)))
    v[18] = (v[18] >>> (lk[0] % 16)) | (v[18] << (32 - (lk[0] % 16)))
    v[21] ^= lk[1]
    v[20] -= lk[0]
    v[23] ^= lk[1]
    v[22] += lk[0]
    v[25] = (v[25] >>> (lk[1] % 16)) | (v[25] << (32 - (lk[1] % 16)))
    v[24] -= lk[0]
    v[27] = (v[27] << (lk[1] % 16)) | (v[27] >>> (32 - (lk[1] % 16)))
    v[26] -= lk[0]
    v[29] += lk[1]
    v[28] ^= lk[0]
    v[31] -= lk[1]
    v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)))
    v[33] -= lk[1]
    v[32] -= lk[0]
    v[35] -= lk[1]
    v[34] -= lk[0]
    v[37] = (v[37] >>> (lk[1] % 16)) | (v[37] << (32 - (lk[1] % 16)))
    v[36] = (v[36] >>> (lk[0] % 16)) | (v[36] << (32 - (lk[0] % 16)))
    v[39] ^= lk[1]
    v[38] -= lk[0]
    v[41] ^= lk[1]
    v[40] += lk[0]
    v[43] = (v[43] >>> (lk[1] % 16)) | (v[43] << (32 - (lk[1] % 16)))
    v[42] -= lk[0]
    v[45] = (v[45] << (lk[1] % 16)) | (v[45] >>> (32 - (lk[1] % 16)))
    v[44] -= lk[0]
    v[47] += lk[1]
    v[46] ^= lk[0]
    v[49] -= lk[1]
    v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)))
    v[51] -= lk[1]
    v[50] -= lk[0]
    v[53] -= lk[1]
    v[52] -= lk[0]
    v[55] = (v[55] >>> (lk[1] % 16)) | (v[55] << (32 - (lk[1] % 16)))
    v[54] = (v[54] >>> (lk[0] % 16)) | (v[54] << (32 - (lk[0] % 16)))
    v[57] ^= lk[1]
    v[56] -= lk[0]
    v[59] ^= lk[1]
    v[58] += lk[0]
    v[61] = (v[61] >>> (lk[1] % 16)) | (v[61] << (32 - (lk[1] % 16)))
    v[60] -= lk[0]
    v[63] = (v[63] << (lk[1] % 16)) | (v[63] >>> (32 - (lk[1] % 16)))
    v[62] -= lk[0]
    v[65] += lk[1]
    v[64] ^= lk[0]
    v[67] -= lk[1]
    v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)))
    v[69] -= lk[1]
    v[68] -= lk[0]
    v[71] -= lk[1]
    v[70] -= lk[0]
    v[73] = (v[73] >>> (lk[1] % 16)) | (v[73] << (32 - (lk[1] % 16)))
    v[72] = (v[72] >>> (lk[0] % 16)) | (v[72] << (32 - (lk[0] % 16)))
    v[75] ^= lk[1]
    v[74] -= lk[0]
    v[77] ^= lk[1]
    v[76] += lk[0]
    v[79] = (v[79] >>> (lk[1] % 16)) | (v[79] << (32 - (lk[1] % 16)))
    v[78] -= lk[0]
    v[81] = (v[81] << (lk[1] % 16)) | (v[81] >>> (32 - (lk[1] % 16)))
    v[80] -= lk[0]
    v[83] += lk[1]
    v[82] ^= lk[0]
    v[85] -= lk[1]
    v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)))
    v[87] -= lk[1]
    v[86] -= lk[0]
    v[89] -= lk[1]
    v[88] -= lk[0]
    v[91] = (v[91] >>> (lk[1] % 16)) | (v[91] << (32 - (lk[1] % 16)))
    v[90] = (v[90] >>> (lk[0] % 16)) | (v[90] << (32 - (lk[0] % 16)))
    v[93] ^= lk[1]
    v[92] -= lk[0]
    v[95] ^= lk[1]
    v[94] += lk[0]
    v[97] = (v[97] >>> (lk[1] % 16)) | (v[97] << (32 - (lk[1] % 16)))
    v[96] -= lk[0]
    v[99] = (v[99] << (lk[1] % 16)) | (v[99] >>> (32 - (lk[1] % 16)))
    v[98] -= lk[0]
    v[101] += lk[1]
    v[100] ^= lk[0]
    v[103] -= lk[1]
    v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)))
    v[105] -= lk[1]
    v[104] -= lk[0]
    v[107] -= lk[1]
    v[106] -= lk[0]
    v[109] = (v[109] >>> (lk[1] % 16)) | (v[109] << (32 - (lk[1] % 16)))
    v[108] = (v[108] >>> (lk[0] % 16)) | (v[108] << (32 - (lk[0] % 16)))
    v[111] ^= lk[1]
    v[110] -= lk[0]
    v[113] ^= lk[1]
    v[112] += lk[0]
    v[115] = (v[115] >>> (lk[1] % 16)) | (v[115] << (32 - (lk[1] % 16)))
    v[114] -= lk[0]
    v[117] = (v[117] << (lk[1] % 16)) | (v[117] >>> (32 - (lk[1] % 16)))
    v[116] -= lk[0]
    v[119] += lk[1]
    v[118] ^= lk[0]
    v[121] -= lk[1]
    v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)))
    v[123] -= lk[1]
    v[122] -= lk[0]
    v[125] -= lk[1]
    v[124] -= lk[0]
    v[127] = (v[127] >>> (lk[1] % 16)) | (v[127] << (32 - (lk[1] % 16)))
    v[126] = (v[126] >>> (lk[0] % 16)) | (v[126] << (32 - (lk[0] % 16)))
    v[129] ^= lk[1]
    v[128] -= lk[0]
    v[131] ^= lk[1]
    v[130] += lk[0]
    v[133] = (v[133] >>> (lk[1] % 16)) | (v[133] << (32 - (lk[1] % 16)))
    v[132] -= lk[0]
    v[135] = (v[135] << (lk[1] % 16)) | (v[135] >>> (32 - (lk[1] % 16)))
    v[134] -= lk[0]
    v[137] += lk[1]
    v[136] ^= lk[0]
    v[139] -= lk[1]
    v[138] = (v[138] >>> (lk[0] % 16)) | (v[138] << (32 - (lk[0] % 16)))
    v[141] -= lk[1]
    v[140] -= lk[0]
    v[143] -= lk[1]
    v[142] -= lk[0]
    v[145] = (v[145] >>> (lk[1] % 16)) | (v[145] << (32 - (lk[1] % 16)))
    v[144] = (v[144] >>> (lk[0] % 16)) | (v[144] << (32 - (lk[0] % 16)))
    v[147] ^= lk[1]
    v[146] -= lk[0]
    v[149] ^= lk[1]
    v[148] += lk[0]
    v[151] = (v[151] >>> (lk[1] % 16)) | (v[151] << (32 - (lk[1] % 16)))
    v[150] -= lk[0]
    v[153] = (v[153] << (lk[1] % 16)) | (v[153] >>> (32 - (lk[1] % 16)))
    v[152] -= lk[0]
    v[155] += lk[1]
    v[154] ^= lk[0]
    v[157] -= lk[1]
    v[156] = (v[156] >>> (lk[0] % 16)) | (v[156] << (32 - (lk[0] % 16)))
    v[159] -= lk[1]
    v[158] -= lk[0]
    v[161] -= lk[1]
    v[160] -= lk[0]
    v[163] = (v[163] >>> (lk[1] % 16)) | (v[163] << (32 - (lk[1] % 16)))
    v[162] = (v[162] >>> (lk[0] % 16)) | (v[162] << (32 - (lk[0] % 16)))
    v[165] ^= lk[1]
    v[164] -= lk[0]
    v[167] ^= lk[1]
    v[166] += lk[0]
    v[169] = (v[169] >>> (lk[1] % 16)) | (v[169] << (32 - (lk[1] % 16)))
    v[168] -= lk[0]
    v[171] = (v[171] << (lk[1] % 16)) | (v[171] >>> (32 - (lk[1] % 16)))
    v[170] -= lk[0]
    v[173] += lk[1]
    v[172] ^= lk[0]
    v[175] -= lk[1]
    v[174] = (v[174] >>> (lk[0] % 16)) | (v[174] << (32 - (lk[0] % 16)))
    v[177] -= lk[1]
    v[176] -= lk[0]
    v[179] -= lk[1]
    v[178] -= lk[0]
    v[181] = (v[181] >>> (lk[1] % 16)) | (v[181] << (32 - (lk[1] % 16)))
    v[180] = (v[180] >>> (lk[0] % 16)) | (v[180] << (32 - (lk[0] % 16)))
    v[183] ^= lk[1]
    v[182] -= lk[0]
    v[185] ^= lk[1]
    v[184] += lk[0]
    v[187] = (v[187] >>> (lk[1] % 16)) | (v[187] << (32 - (lk[1] % 16)))
    v[186] -= lk[0]
    v[189] = (v[189] << (lk[1] % 16)) | (v[189] >>> (32 - (lk[1] % 16)))
    v[188] -= lk[0]
    v[191] += lk[1]
    v[190] ^= lk[0]
    v[193] -= lk[1]
    v[192] = (v[192] >>> (lk[0] % 16)) | (v[192] << (32 - (lk[0] % 16)))
    v[195] -= lk[1]
    v[194] -= lk[0]
    v[197] -= lk[1]
    v[196] -= lk[0]
    v[199] = (v[199] >>> (lk[1] % 16)) | (v[199] << (32 - (lk[1] % 16)))
    v[198] = (v[198] >>> (lk[0] % 16)) | (v[198] << (32 - (lk[0] % 16)))
    v[201] ^= lk[1]
    v[200] -= lk[0]
    v[203] ^= lk[1]
    v[202] += lk[0]
    v[205] = (v[205] >>> (lk[1] % 16)) | (v[205] << (32 - (lk[1] % 16)))
    v[204] -= lk[0]
    v[207] = (v[207] << (lk[1] % 16)) | (v[207] >>> (32 - (lk[1] % 16)))
    v[206] -= lk[0]
    v[209] += lk[1]
    v[208] ^= lk[0]
    v[211] -= lk[1]
    v[210] = (v[210] >>> (lk[0] % 16)) | (v[210] << (32 - (lk[0] % 16)))
    v[213] -= lk[1]
    v[212] -= lk[0]
    v[215] -= lk[1]
    v[214] -= lk[0]
    v[217] = (v[217] >>> (lk[1] % 16)) | (v[217] << (32 - (lk[1] % 16)))
    v[216] = (v[216] >>> (lk[0] % 16)) | (v[216] << (32 - (lk[0] % 16)))
    v[219] ^= lk[1]
    v[218] -= lk[0]
    v[221] ^= lk[1]
    v[220] += lk[0]
    v[223] = (v[223] >>> (lk[1] % 16)) | (v[223] << (32 - (lk[1] % 16)))
    v[222] -= lk[0]
    v[225] = (v[225] << (lk[1] % 16)) | (v[225] >>> (32 - (lk[1] % 16)))
    v[224] -= lk[0]
    v[227] += lk[1]
    v[226] ^= lk[0]
    v[229] -= lk[1]
    v[228] = (v[228] >>> (lk[0] % 16)) | (v[228] << (32 - (lk[0] % 16)))
    v[231] -= lk[1]
    v[230] -= lk[0]
    v[233] -= lk[1]
    v[232] -= lk[0]
    v[235] = (v[235] >>> (lk[1] % 16)) | (v[235] << (32 - (lk[1] % 16)))
    v[234] = (v[234] >>> (lk[0] % 16)) | (v[234] << (32 - (lk[0] % 16)))
    v[237] ^= lk[1]
    v[236] -= lk[0]
    v[239] ^= lk[1]
    v[238] += lk[0]
    v[241] = (v[241] >>> (lk[1] % 16)) | (v[241] << (32 - (lk[1] % 16)))
    v[240] -= lk[0]
    v[243] = (v[243] << (lk[1] % 16)) | (v[243] >>> (32 - (lk[1] % 16)))
    v[242] -= lk[0]
    v[245] += lk[1]
    v[244] ^= lk[0]
    v[247] -= lk[1]
    v[246] = (v[246] >>> (lk[0] % 16)) | (v[246] << (32 - (lk[0] % 16)))
    v[249] -= lk[1]
    v[248] -= lk[0]
    v[251] -= lk[1]
    v[250] -= lk[0]
    v[253] = (v[253] >>> (lk[1] % 16)) | (v[253] << (32 - (lk[1] % 16)))
    v[252] = (v[252] >>> (lk[0] % 16)) | (v[252] << (32 - (lk[0] % 16)))
    v[255] ^= lk[1]
    v[254] -= lk[0]
    v[257] ^= lk[1]
    v[256] += lk[0]
    v[259] = (v[259] >>> (lk[1] % 16)) | (v[259] << (32 - (lk[1] % 16)))
    v[258] -= lk[0]
    v[261] = (v[261] << (lk[1] % 16)) | (v[261] >>> (32 - (lk[1] % 16)))
    v[260] -= lk[0]
    v[263] += lk[1]
    v[262] ^= lk[0]
    v[265] -= lk[1]
    v[264] = (v[264] >>> (lk[0] % 16)) | (v[264] << (32 - (lk[0] % 16)))
    v[267] -= lk[1]
    v[266] -= lk[0]
    v[269] -= lk[1]
    v[268] -= lk[0]
    v[271] = (v[271] >>> (lk[1] % 16)) | (v[271] << (32 - (lk[1] % 16)))
    v[270] = (v[270] >>> (lk[0] % 16)) | (v[270] << (32 - (lk[0] % 16)))
    v[273] ^= lk[1]
    v[272] -= lk[0]
    v[275] ^= lk[1]
    v[274] += lk[0]
    v[277] = (v[277] >>> (lk[1] % 16)) | (v[277] << (32 - (lk[1] % 16)))
    v[276] -= lk[0]
    v[279] = (v[279] << (lk[1] % 16)) | (v[279] >>> (32 - (lk[1] % 16)))
    v[278] -= lk[0]
    v[281] += lk[1]
    v[280] ^= lk[0]
    v[283] -= lk[1]
    v[282] = (v[282] >>> (lk[0] % 16)) | (v[282] << (32 - (lk[0] % 16)))
    v[285] -= lk[1]
    v[284] -= lk[0]
    v[287] -= lk[1]
    v[286] -= lk[0]
    v[289] = (v[289] >>> (lk[1] % 16)) | (v[289] << (32 - (lk[1] % 16)))
    v[288] = (v[288] >>> (lk[0] % 16)) | (v[288] << (32 - (lk[0] % 16)))
    v[291] ^= lk[1]
    v[290] -= lk[0]
    v[293] ^= lk[1]
    v[292] += lk[0]
    v[295] = (v[295] >>> (lk[1] % 16)) | (v[295] << (32 - (lk[1] % 16)))
    v[294] -= lk[0]
    v[297] = (v[297] << (lk[1] % 16)) | (v[297] >>> (32 - (lk[1] % 16)))
    v[296] -= lk[0]
    v[299] += lk[1]
    v[298] ^= lk[0]
    v[301] -= lk[1]
    v[300] = (v[300] >>> (lk[0] % 16)) | (v[300] << (32 - (lk[0] % 16)))
    v[303] -= lk[1]
    v[302] -= lk[0]
    v[305] -= lk[1]
    v[304] -= lk[0]
    v[307] = (v[307] >>> (lk[1] % 16)) | (v[307] << (32 - (lk[1] % 16)))
    v[306] = (v[306] >>> (lk[0] % 16)) | (v[306] << (32 - (lk[0] % 16)))
    v[309] ^= lk[1]
    v[308] -= lk[0]
    v[311] ^= lk[1]
    v[310] += lk[0]
    v[313] = (v[313] >>> (lk[1] % 16)) | (v[313] << (32 - (lk[1] % 16)))
    v[312] -= lk[0]
    v[315] = (v[315] << (lk[1] % 16)) | (v[315] >>> (32 - (lk[1] % 16)))
    v[314] -= lk[0]
    v[317] += lk[1]
    v[316] ^= lk[0]
    v[319] -= lk[1]
    v[318] = (v[318] >>> (lk[0] % 16)) | (v[318] << (32 - (lk[0] % 16)))
    v[321] -= lk[1]
    v[320] -= lk[0]
    v[323] -= lk[1]
    v[322] -= lk[0]
    v[325] = (v[325] >>> (lk[1] % 16)) | (v[325] << (32 - (lk[1] % 16)))
    v[324] = (v[324] >>> (lk[0] % 16)) | (v[324] << (32 - (lk[0] % 16)))
    v[327] ^= lk[1]
    v[326] -= lk[0]
    v[329] ^= lk[1]
    v[328] += lk[0]
    v[331] = (v[331] >>> (lk[1] % 16)) | (v[331] << (32 - (lk[1] % 16)))
    v[330] -= lk[0]
    v[333] = (v[333] << (lk[1] % 16)) | (v[333] >>> (32 - (lk[1] % 16)))
    v[332] -= lk[0]
    v[335] += lk[1]
    v[334] ^= lk[0]
    v[337] -= lk[1]
    v[336] = (v[336] >>> (lk[0] % 16)) | (v[336] << (32 - (lk[0] % 16)))
    v[339] -= lk[1]
    v[338] -= lk[0]
    v[341] -= lk[1]
    v[340] -= lk[0]
    v[343] = (v[343] >>> (lk[1] % 16)) | (v[343] << (32 - (lk[1] % 16)))
    v[342] = (v[342] >>> (lk[0] % 16)) | (v[342] << (32 - (lk[0] % 16)))
    v[345] ^= lk[1]
    v[344] -= lk[0]
    v[347] ^= lk[1]
    v[346] += lk[0]
    v[349] = (v[349] >>> (lk[1] % 16)) | (v[349] << (32 - (lk[1] % 16)))
    v[348] -= lk[0]
    v[351] = (v[351] << (lk[1] % 16)) | (v[351] >>> (32 - (lk[1] % 16)))
    v[350] -= lk[0]
    v[353] += lk[1]
    v[352] ^= lk[0]
    v[355] -= lk[1]
    v[354] = (v[354] >>> (lk[0] % 16)) | (v[354] << (32 - (lk[0] % 16)))
    v[357] -= lk[1]
    v[356] -= lk[0]
    v[359] -= lk[1]
    v[358] -= lk[0]
    v[361] = (v[361] >>> (lk[1] % 16)) | (v[361] << (32 - (lk[1] % 16)))
    v[360] = (v[360] >>> (lk[0] % 16)) | (v[360] << (32 - (lk[0] % 16)))
    v[363] ^= lk[1]
    v[362] -= lk[0]
    v[365] ^= lk[1]
    v[364] += lk[0]
    v[367] = (v[367] >>> (lk[1] % 16)) | (v[367] << (32 - (lk[1] % 16)))
    v[366] -= lk[0]
    v[369] = (v[369] << (lk[1] % 16)) | (v[369] >>> (32 - (lk[1] % 16)))
    v[368] -= lk[0]
    v[371] += lk[1]
    v[370] ^= lk[0]
    v[373] -= lk[1]
    v[372] = (v[372] >>> (lk[0] % 16)) | (v[372] << (32 - (lk[0] % 16)))
    v[375] -= lk[1]
    v[374] -= lk[0]
    v[377] -= lk[1]
    v[376] -= lk[0]
    v[379] = (v[379] >>> (lk[1] % 16)) | (v[379] << (32 - (lk[1] % 16)))
    v[378] = (v[378] >>> (lk[0] % 16)) | (v[378] << (32 - (lk[0] % 16)))
    v[381] ^= lk[1]
    v[380] -= lk[0]
    v[383] ^= lk[1]
    v[382] += lk[0]
    v[385] = (v[385] >>> (lk[1] % 16)) | (v[385] << (32 - (lk[1] % 16)))
    v[384] -= lk[0]
    v[387] = (v[387] << (lk[1] % 16)) | (v[387] >>> (32 - (lk[1] % 16)))
    v[386] -= lk[0]
    v[389] += lk[1]
    v[388] ^= lk[0]
    v[391] -= lk[1]
    v[390] = (v[390] >>> (lk[0] % 16)) | (v[390] << (32 - (lk[0] % 16)))
    v[393] -= lk[1]
    v[392] -= lk[0]
    v[395] -= lk[1]
    v[394] -= lk[0]
    v[397] = (v[397] >>> (lk[1] % 16)) | (v[397] << (32 - (lk[1] % 16)))
    v[396] = (v[396] >>> (lk[0] % 16)) | (v[396] << (32 - (lk[0] % 16)))
    v[399] ^= lk[1]
    v[398] -= lk[0]
    v[401] ^= lk[1]
    v[400] += lk[0]
    v[403] = (v[403] >>> (lk[1] % 16)) | (v[403] << (32 - (lk[1] % 16)))
    v[402] -= lk[0]
    v[405] = (v[405] << (lk[1] % 16)) | (v[405] >>> (32 - (lk[1] % 16)))
    v[404] -= lk[0]
    v[407] += lk[1]
    v[406] ^= lk[0]
    v[409] -= lk[1]
    v[408] = (v[408] >>> (lk[0] % 16)) | (v[408] << (32 - (lk[0] % 16)))
    v[411] -= lk[1]
    v[410] -= lk[0]
    v[413] -= lk[1]
    v[412] -= lk[0]
    v[415] = (v[415] >>> (lk[1] % 16)) | (v[415] << (32 - (lk[1] % 16)))
    v[414] = (v[414] >>> (lk[0] % 16)) | (v[414] << (32 - (lk[0] % 16)))
    v[417] ^= lk[1]
    v[416] -= lk[0]
    v[419] ^= lk[1]
    v[418] += lk[0]
    for (var I = 0; I < 420; I += 2) {
        var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2]
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3])
            sum -= d
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3])
        }
        v[I] = v0 ^ k2[1]
        v[I + 1] = v1 ^ k2[0]
    }
    for (var O = 419; O > 0; O--) {
        v[O] ^= v[O - 1]
    }
    v[0] ^= 0x58f16098
    var strc = ""
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff)
    }
    return eval(strc)(rea7b63366dc6101468930, rea7b63366dc6101468931, rea7b63366dc6101468932)
}

module.exports = ub98484234
